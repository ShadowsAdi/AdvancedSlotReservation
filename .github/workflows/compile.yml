# Many thanks for: 
# fysiks1: https://github.com/fysiks1/
# rtxa: https://github.com/rtxa/
# Extracted from: https://github.com/fysiks1/amxx-test-compile/tree/master/.github/workflows

on: [push]

jobs:
  compile_plugin_19:
    runs-on: ubuntu-latest
    env:
      AMXX_MOD_PACKAGE: ""
      AMXX_VERSION_LATEST: "1.9"
      REPO_SCRIPTING_DIR: "scripting"
      ARTIFACTS_DIR: ${{ github.workspace }}/artifacts

    name: Compile Plugin AmxModX 1.9
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
    
      - name: Download AMX Mod X Base Files
        run: |
          wget "https://www.amxmodx.org/latest.php?version=$AMXX_VERSION_LATEST&os=linux&package=base" -O amxmodx-base-linux.tar.gz
          tar -zxvf amxmodx-base-linux.tar.gz
      - name: Download AMX Mod X Mod Files
        if: ${{ env.AMXX_MOD_PACKAGE }}
        run: |
          wget "https://www.amxmodx.org/latest.php?version=$AMXX_VERSION_LATEST&os=linux&package=$AMXX_MOD_PACKAGE" -O "amxmodx-$AMXX_MOD_PACKAGE-linux.tar.gz"
          tar -zxvf "amxmodx-$AMXX_MOD_PACKAGE-linux.tar.gz"
      - name: Download ReAPI Files
        run: |
          wget https://github.com/s1lentq/reapi/releases/download/5.21.0.248/reapi-bin-5.21.0.248.zip
          unzip reapi-bin-5.21.0.248.zip
      - name: Download Orhepu Files
        run: |
          wget https://github.com/Arkshine/Orpheu/releases/download/2.6.3/orpheu-files-2.6.3.zip
          unzip orpheu-files-2.6.3.zip
      - name: Prepare files for compilation
        run: |
          cp -r -v $REPO_SCRIPTING_DIR addons/amxmodx/
          cp -r -v scripting addons/amxmodx
      - name: Compile Plugin(s)
        run: |
          mkdir $ARTIFACTS_DIR
          cd addons/amxmodx/scripting/
          
          # Give amxxpc the required permissions
          chmod +x amxxpc
          
          # Compile all plugins inside scripting folder
          # List of files to compile generated from the original checked out files
          for file in $GITHUB_WORKSPACE/scripting/advanced_slot_reservation.sma
          do
            amxfile="`echo $file | sed -e 's/\.sma$/\.amxx/'`"
            echo -e "\nCompiling $(basename $file)..."
            ./amxxpc $(basename $file) -o$ARTIFACTS_DIR/$(basename "$amxfile")
          done
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: plugin_binaries_190
          path: ${{ env.ARTIFACTS_DIR }}/*

  compile_plugin_18:
    runs-on: ubuntu-latest
    env:
      AMXX_MOD_PACKAGE: ""
      AMXX_VERSION: "1.8"
      REPO_SCRIPTING_DIR: "scripting"
      ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
    
    name: Compile Plugin AmxModX 1.8
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
    
      - name: Download AMX Mod X Base Files
        run: |
          wget "https://www.amxmodx.org/amxxdrop/$AMXX_VERSION/amxmodx-1.8.2-hg65-base-linux.tar.gz" -O amxmodx18-base-linux.tar.gz
          tar xf amxmodx18-base-linux.tar.gz
      - name: Download AMX Mod X Mod Files
        if: ${{ env.AMXX_MOD_PACKAGE }}
        run: |
          wget "https://www.amxmodx.org/latest.php?version=$AMXX_VERSION_LATEST&os=linux&package=$AMXX_MOD_PACKAGE" -O "amxmodx-$AMXX_MOD_PACKAGE-linux.tar.gz"
          tar -zxvf "amxmodx-$AMXX_MOD_PACKAGE-linux.tar.gz"
      - name: Download ReAPI Files
        run: |
          wget https://github.com/s1lentq/reapi/releases/download/5.21.0.248/reapi-bin-5.21.0.248.zip
          unzip reapi-bin-5.21.0.248.zip
      - name: Download Orhepu Files
        run: |
          wget https://github.com/Arkshine/Orpheu/releases/download/2.6.3/orpheu-files-2.6.3.zip
          unzip orpheu-files-2.6.3.zip
      - name: Prepare files for compilation
        run: |
          cp -r -v $REPO_SCRIPTING_DIR addons/amxmodx/
          cp -r -v scripting addons/amxmodx
      - name: Compile Plugin(s)
        run: |
          mkdir $ARTIFACTS_DIR
          cd addons/amxmodx/scripting/
          
          # Give amxxpc the required permissions
          chmod +x amxxpc
          
          # Compile all plugins inside scripting folder
          # List of files to compile generated from the original checked out files
          for file in $GITHUB_WORKSPACE/scripting/*.sma
          do
            amxfile="`echo $file | sed -e 's/\.sma$/\.amxx/'`"
            echo -e "\nCompiling $(basename $file)..."
            ./amxxpc $(basename $file) -o$ARTIFACTS_DIR/$(basename "$amxfile")
          done
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: plugin_binaries_180
          path: ${{ env.ARTIFACTS_DIR }}/*
          
  publish:
      name: "Publish"
      runs-on: ubuntu-latest
      needs: [compile_plugin_19, compile_plugin_18]
      if: |
        github.event_name == 'release' &&
        github.event.action == 'published' &&
        startsWith(github.ref, 'refs/tags/')
      steps:
        - name: Download artifacts
          uses: actions/download-artifact@v2
          with:
           name: CSGORemake-${{needs.build.outputs.sha}}

        - name: Packaging binaries
          id: packaging
          run: 7z a -mm=Deflate -mfb=258 -mpass=15 -r AdvancedSlotReservation-v${{needs.build.outputs.semver}}.zip plugins/

        - name: Packaging resources
          id: packresources
          run: 7z a -mm=Deflate -mfb=258 -mpass=15 -r AdvancedSlotReservation-resources${{needs.build.outputs.semver}}.zip configs/

        - name: Publish artifacts
          uses: softprops/action-gh-release@v1
          id: publish-job
          if: |
            startsWith(github.ref, 'refs/tags/') && ( steps.packaging.outcome == 'success' && steps.packresources.outcome == 'success' )
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            files: |
              *.zip
